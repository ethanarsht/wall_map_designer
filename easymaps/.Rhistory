shiny::runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
shiny::runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
install.packages("tidygeocoder")
runApp('easymaps')
library(tinygeocoder)
library(tidygeocoder)
runApp('easymaps')
df_address <- data.frame(
address = c(geo_address)
)
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
lng = 5.1225301
lat = 52.0734346
zoom = 14
title = 'Miami'
location = 'Florida'
# tile <- 'https://api.mapbox.com/styles/v1/ethanarsht/ckzh1dxab009h14l85ghq6ccm/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiZXRoYW5hcnNodCIsImEiOiJjaW5hc3Byd3kwaHR1dThsd20yazIyeGJ0In0.iv93g_tMGrXHNt5eLWFYNw'
m <- leaflet() %>%
addTiles(urlTemplate = tile) %>%
# addProviderTiles(providers$Stamen.Watercolor) %>%
# addCircleMarkers(
#   lng = 5.1225301,
#   lat = 52.0734346,
#   color = "orange",
#   fillColor = "orange",
#   opacity = 0,
#   fillOpacity = .75,
#   radius = 12
# ) %>%
setView(lng = lng, lat = lat, zoom = zoom)
source("~/map_app/easymaps/map_script.R", echo=TRUE)
lng = 5.1225301
lat = 52.0734346
zoom = 14
title = 'Miami'
location = 'Florida'
tile <- 'https://api.mapbox.com/styles/v1/ethanarsht/ckzh1dxab009h14l85ghq6ccm/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiZXRoYW5hcnNodCIsImEiOiJjaW5hc3Byd3kwaHR1dThsd20yazIyeGJ0In0.iv93g_tMGrXHNt5eLWFYNw'
m <- leaflet() %>%
addTiles(urlTemplate = tile) %>%
# addProviderTiles(providers$Stamen.Watercolor) %>%
# addCircleMarkers(
#   lng = 5.1225301,
#   lat = 52.0734346,
#   color = "orange",
#   fillColor = "orange",
#   opacity = 0,
#   fillOpacity = .75,
#   radius = 12
# ) %>%
setView(lng = lng, lat = lat, zoom = zoom)
mapshot(m, file = "temp.png", selfcontained = FALSE, zoom = 2,
vwidth = 992, vheight = 992
)
i <- image_read('temp.png')
i
tile <- 'https://api.mapbox.com/styles/v1/ethanarsht/ckzh1dxab009h14l85ghq6ccm/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiZXRoYW5hcnNodCIsImEiOiJja3p4emVycHgwNmpuMnBwY296emJkdG5nIn0.WH_aegqXnpfsAQ-OrdIJeA'
m <- leaflet() %>%
addTiles(urlTemplate = tile) %>%
# addProviderTiles(providers$Stamen.Watercolor) %>%
# addCircleMarkers(
#   lng = 5.1225301,
#   lat = 52.0734346,
#   color = "orange",
#   fillColor = "orange",
#   opacity = 0,
#   fillOpacity = .75,
#   radius = 12
# ) %>%
setView(lng = lng, lat = lat, zoom = zoom)
mapshot(m, file = "temp.png", selfcontained = FALSE, zoom = 2,
vwidth = 992, vheight = 992
)
i <- image_read('temp.png')
i
i_crop <- i %>%
image_crop('1400X800', gravity = 'center')
i_crop
i_crop <- i %>%
image_crop('1400X800', gravity = 'center') %>%
image_border('gray', '10x10') %>%
image_border('white', '200x200+100+100')
i_crop
i_crop <- i %>%
image_crop('1400X800', gravity = 'center') %>%
image_border('gray', '10x10') %>%
image_border('white', '200x200+100+100') %>%
# image_crop('800x950', gravity = 'south') %>%
image_annotate(toupper(title), size = 50, gravity = "south",
location = '+0+110',
weight = 700) %>%
image_annotate(location,
size = 30,
gravity = 'south',
location = '+0+70',
style = 'italic')
i_crop
i_crop <- i %>%
image_crop('1400X800', gravity = 'center') %>%
image_border('gray', '10x10') %>%
image_border('white', '200x200+100+100') %>%
# image_crop('800x950', gravity = 'south') %>%
image_annotate(toupper(title), size = 50, gravity = "south",
location = '+0+110',
weight = 700) %>%
image_annotate(location,
size = 30,
gravity = 'south',
location = '+0+70',
style = 'italic') %>%
# image_annotate('Ethan Arsht',
#                size = 15,
#                gravity = 'south',
#                location = "+300+25",
#                font = "Mistral",
#                color = "blue") %>%
# image_scale('875x875!') %>%
image_border('white', '50x50')
i_crop
i_crop <- i %>%
# image_crop('1400X800', gravity = 'center') %>%
image_border('gray', '10x10') %>%
image_border('white', '200x200+100+100') %>%
# image_crop('800x950', gravity = 'south') %>%
image_annotate(toupper(title), size = 50, gravity = "south",
location = '+0+110',
weight = 700) %>%
image_annotate(location,
size = 30,
gravity = 'south',
location = '+0+70',
style = 'italic')
i_crop
zoom = 16
title = 'Miami'
location = 'Florida'
tile <- 'https://api.mapbox.com/styles/v1/ethanarsht/ckzh1dxab009h14l85ghq6ccm/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiZXRoYW5hcnNodCIsImEiOiJja3p4emVycHgwNmpuMnBwY296emJkdG5nIn0.WH_aegqXnpfsAQ-OrdIJeA'
m <- leaflet() %>%
addTiles(urlTemplate = tile) %>%
# addProviderTiles(providers$Stamen.Watercolor) %>%
# addCircleMarkers(
#   lng = 5.1225301,
#   lat = 52.0734346,
#   color = "orange",
#   fillColor = "orange",
#   opacity = 0,
#   fillOpacity = .75,
#   radius = 12
# ) %>%
setView(lng = lng, lat = lat, zoom = zoom)
mapshot(m, file = "temp.png", selfcontained = FALSE, zoom = 2,
vwidth = 992, vheight = 992
)
i <- image_read('temp.png')
i_crop <- i %>%
# image_crop('1400X800', gravity = 'center') %>%
image_border('gray', '10x10') %>%
image_border('white', '200x200+100+100') %>%
# image_crop('800x950', gravity = 'south') %>%
image_annotate(toupper(title), size = 50, gravity = "south",
location = '+0+110',
weight = 700) %>%
image_annotate(location,
size = 30,
gravity = 'south',
location = '+0+70',
style = 'italic')
i_crop
mapshot(m, file = "temp.png", selfcontained = FALSE, zoom = 2,
vwidth = 800, vheight = 800
)
i <- image_read('temp.png')
i_crop <- i %>%
# image_crop('1400X800', gravity = 'center') %>%
image_border('gray', '10x10') %>%
image_border('white', '200x200+100+100') %>%
# image_crop('800x950', gravity = 'south') %>%
image_annotate(toupper(title), size = 50, gravity = "south",
location = '+0+110',
weight = 700) %>%
image_annotate(location,
size = 30,
gravity = 'south',
location = '+0+70',
style = 'italic')
i_crop
mapshot(m, file = "temp.png", selfcontained = FALSE, zoom = 2,
vwidth = 500, vheight = 992
)
i <- image_read('temp.png')
i_crop <- i %>%
# image_crop('1400X800', gravity = 'center') %>%
image_border('gray', '10x10') %>%
image_border('white', '200x200+100+100') %>%
# image_crop('800x950', gravity = 'south') %>%
image_annotate(toupper(title), size = 50, gravity = "south",
location = '+0+110',
weight = 700) %>%
image_annotate(location,
size = 30,
gravity = 'south',
location = '+0+70',
style = 'italic')
i_crop
?mapshot
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
outline_geo <- geo("Ixelles",
method = "osm", full_results = TRUE,
custom_query = list(polygon_geojson = 1), verbose = TRUE
)
library(leaflet)
library(shiny)
library(tidygeocoder)
library(osmdata)
library(raster)
library(rgeos)
library(mapview)
library(shinyWidgets)
library(sf)
library(shinyjs)
outline_geo <- geo("Ixelles",
method = "osm", full_results = TRUE,
custom_query = list(polygon_geojson = 1), verbose = TRUE
)
View(outline_geo)
View(outline_geo)
outline_geo <- geo("Ixelles",
method = "osm", full_results = TRUE
)
View(outline_geo)
httr::GET("https://global.mapit.mysociety.org/point/4326/8.55,47.366667")
r <- httr::GET("https://global.mapit.mysociety.org/point/4326/8.55,47.366667")
r.content
r
r$content
rawtoChar(r$content)
rawToChar(r$content)
data <- fromJSON(rawToChar(r$content))
library(jsonlite)
r <- httr::GET("https://global.mapit.mysociety.org/point/4326/8.55,47.366667")
data <- fromJSON(rawToChar(r$content))
View(data)
outline_geo <- geo("Ixelles",
method = "osm", full_results = TRUE
)
View(outline_geo)
r <- httr::GET("https://global.mapit.mysociety.org/point/4326/4.55,47.366667")
data <- fromJSON(rawToChar(r$content))
View(data)
names(data)
data$`960871`
r <- httr::GET("https://global.mapit.mysociety.org/point/4326/4.55,47.366667")
data <- fromJSON(rawToChar(r$content))
data
r <- httr::GET("https://global.mapit.mysociety.org/point/4326/4.366828,50.83311")
data <- fromJSON(rawToChar(r$content))
data
names(data)
View(data)
data$`958855` %>% as_data_frame()
data$`958855` %>% as_tibble()
library(tidyverse)
data$`958855` %>% as_tibble()
data$`958855`
for (n in names(data)) {
print(data)
}
data$`984500` %>% as_tibble()
data$`1189191` %>% as_tibble()
data$`1056676` %>% as_tibble()
for (n in names(data)) {
data$n
}
print(data$n)
for (n in names(data)) {
print(data$n)
}
for (n in names(data)) {
print(n)
print(data$n)
}
data
for (n in names(data)) {
print(n)
print(data$n)
}
data$`958855`
data$`958855`$type
data$`958855`$type_name
for (n in names(data)) {
print(n)
print(data[[n]])
}
data <- fromJSON(rawToChar(r$content))
for (n in names(data)) {
print(n)
print(data[[n]])
if (data[[n]]$type_name == "OSM Administrative Boundary Level 8") {
lookup_id = n
}
}
mapit_lookup <- httr::GET(str_c("https://global.mapit.mysociety.org/area/", lookup_id, ".geojson"))
mapit_lookup
r$content
rawToChar(r$content)
rawToChar(mapit_lookup$content)
mapit_lookup$content
fromJSON(rawToChar(mapit_lookup$content))
library(geojsonsf)
geojson_sf(fromJSON(rawToChar(mapit_lookup$content)))
fromJSON(rawToChar(mapit_lookup$content))
rawToChar(mapit_lookup$content)
sf <- geojson_sf(rawToChar(mapit_lookup$content))
View(sf)
outline_geo
outline_geo <- geo("Ixelles",
method = "osm", full_results = TRUE
)
r <- httr::GET(str_c(
"https://global.mapit.mysociety.org/point/4326/", outline_geo[[1, "long"]], outline_geo[[1, "lat"]],
)
)
r <- httr::GET(str_c(
"https://global.mapit.mysociety.org/point/4326/", outline_geo[[1, "long"]], outline_geo[[1, "lat"]]
)
)
data <- fromJSON(rawToChar(r$content))
r
r <- httr::GET(str_c(
"https://global.mapit.mysociety.org/point/4326/", outline_geo[[1, "long"]], ",", outline_geo[[1, "lat"]]
)
)
data <- fromJSON(rawToChar(r$content))
for (n in names(data)) {
print(n)
print(data[[n]])
if (data[[n]]$type_name == "OSM Administrative Boundary Level 8") {
lookup_id <- n
}
}
mapit_lookup <- httr::GET(str_c("https://global.mapit.mysociety.org/area/", lookup_id, ".geojson"))
sf <- geojson_sf(rawToChar(mapit_lookup$content))
print(municipalities)
return(municipalities)
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
outline_geo <- geo("Kolkata, India",
method = "osm", full_results = TRUE
)
r <- httr::GET(str_c(
"https://global.mapit.mysociety.org/point/4326/", outline_geo[[1, "long"]], ",", outline_geo[[1, "lat"]]
)
)
data <- fromJSON(rawToChar(r$content))
for (n in names(data)) {
print(n)
if (data[[n]]$type_name == "OSM Administrative Boundary Level 8") {
print(data[[n]])
lookup_id <- n
}
}
outline_geo <- geo("Kolkata, India",
method = "osm", full_results = TRUE
)
r <- httr::GET(str_c(
"https://global.mapit.mysociety.org/point/4326/", outline_geo[[1, "long"]], ",", outline_geo[[1, "lat"]]
)
)
data <- fromJSON(rawToChar(r$content))
for (n in names(data)) {
print(n)
if (data[[n]]$type_name == "OSM Administrative Boundary Level 8") {
print(data[[n]])
lookup_id <- n
}
}
if (!exists('lookup_id')) {
for (n in names(data)) {
print(n)
if (data[[n]]$type_name == "OSM Administrative Boundary Level 7") {
print(data[[n]])
lookup_id <- n
}
}
}
data
runApp('easymaps')
boundaries <- opq(bbox = "Saint Petersburg") %>%
add_osm_feature(key = 'admin_level', value = 7) %>%
osmdata_sf
municipalities <- boundaries$osm_multipolygons %>%
st_make_valid() %>%
summarize()
boundaries <- opq(bbox = "Saint Petersburg") %>%
add_osm_feature(key = 'admin_level', value = 8) %>%
osmdata_sf
municipalities <- boundaries$osm_multipolygons %>%
st_make_valid() %>%
summarize()
ggplot(municipalities)
municipalities
tmap::qtm(municipalities)
boundaries <- opq(bbox = "Istanbul") %>%
add_osm_feature(key = 'admin_level', value = 8) %>%
osmdata_sf
municipalities <- boundaries$osm_multipolygons %>%
st_make_valid() %>%
summarize()
tmap::qtm(municipalities)
runApp('easymaps')
setwd("~/wall_map_designer/easymaps")
shiny::runApp()
runApp()

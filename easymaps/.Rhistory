shiny::runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
shiny::runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
install.packages("tidygeocoder")
runApp('easymaps')
library(tinygeocoder)
library(tidygeocoder)
runApp('easymaps')
df_address <- data.frame(
address = c(geo_address)
)
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
lng = 5.1225301
lat = 52.0734346
zoom = 14
title = 'Miami'
location = 'Florida'
# tile <- 'https://api.mapbox.com/styles/v1/ethanarsht/ckzh1dxab009h14l85ghq6ccm/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiZXRoYW5hcnNodCIsImEiOiJjaW5hc3Byd3kwaHR1dThsd20yazIyeGJ0In0.iv93g_tMGrXHNt5eLWFYNw'
m <- leaflet() %>%
addTiles(urlTemplate = tile) %>%
# addProviderTiles(providers$Stamen.Watercolor) %>%
# addCircleMarkers(
#   lng = 5.1225301,
#   lat = 52.0734346,
#   color = "orange",
#   fillColor = "orange",
#   opacity = 0,
#   fillOpacity = .75,
#   radius = 12
# ) %>%
setView(lng = lng, lat = lat, zoom = zoom)
source("~/map_app/easymaps/map_script.R", echo=TRUE)
lng = 5.1225301
lat = 52.0734346
zoom = 14
title = 'Miami'
location = 'Florida'
tile <- 'https://api.mapbox.com/styles/v1/ethanarsht/ckzh1dxab009h14l85ghq6ccm/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiZXRoYW5hcnNodCIsImEiOiJjaW5hc3Byd3kwaHR1dThsd20yazIyeGJ0In0.iv93g_tMGrXHNt5eLWFYNw'
m <- leaflet() %>%
addTiles(urlTemplate = tile) %>%
# addProviderTiles(providers$Stamen.Watercolor) %>%
# addCircleMarkers(
#   lng = 5.1225301,
#   lat = 52.0734346,
#   color = "orange",
#   fillColor = "orange",
#   opacity = 0,
#   fillOpacity = .75,
#   radius = 12
# ) %>%
setView(lng = lng, lat = lat, zoom = zoom)
mapshot(m, file = "temp.png", selfcontained = FALSE, zoom = 2,
vwidth = 992, vheight = 992
)
i <- image_read('temp.png')
i
tile <- 'https://api.mapbox.com/styles/v1/ethanarsht/ckzh1dxab009h14l85ghq6ccm/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiZXRoYW5hcnNodCIsImEiOiJja3p4emVycHgwNmpuMnBwY296emJkdG5nIn0.WH_aegqXnpfsAQ-OrdIJeA'
m <- leaflet() %>%
addTiles(urlTemplate = tile) %>%
# addProviderTiles(providers$Stamen.Watercolor) %>%
# addCircleMarkers(
#   lng = 5.1225301,
#   lat = 52.0734346,
#   color = "orange",
#   fillColor = "orange",
#   opacity = 0,
#   fillOpacity = .75,
#   radius = 12
# ) %>%
setView(lng = lng, lat = lat, zoom = zoom)
mapshot(m, file = "temp.png", selfcontained = FALSE, zoom = 2,
vwidth = 992, vheight = 992
)
i <- image_read('temp.png')
i
i_crop <- i %>%
image_crop('1400X800', gravity = 'center')
i_crop
i_crop <- i %>%
image_crop('1400X800', gravity = 'center') %>%
image_border('gray', '10x10') %>%
image_border('white', '200x200+100+100')
i_crop
i_crop <- i %>%
image_crop('1400X800', gravity = 'center') %>%
image_border('gray', '10x10') %>%
image_border('white', '200x200+100+100') %>%
# image_crop('800x950', gravity = 'south') %>%
image_annotate(toupper(title), size = 50, gravity = "south",
location = '+0+110',
weight = 700) %>%
image_annotate(location,
size = 30,
gravity = 'south',
location = '+0+70',
style = 'italic')
i_crop
i_crop <- i %>%
image_crop('1400X800', gravity = 'center') %>%
image_border('gray', '10x10') %>%
image_border('white', '200x200+100+100') %>%
# image_crop('800x950', gravity = 'south') %>%
image_annotate(toupper(title), size = 50, gravity = "south",
location = '+0+110',
weight = 700) %>%
image_annotate(location,
size = 30,
gravity = 'south',
location = '+0+70',
style = 'italic') %>%
# image_annotate('Ethan Arsht',
#                size = 15,
#                gravity = 'south',
#                location = "+300+25",
#                font = "Mistral",
#                color = "blue") %>%
# image_scale('875x875!') %>%
image_border('white', '50x50')
i_crop
i_crop <- i %>%
# image_crop('1400X800', gravity = 'center') %>%
image_border('gray', '10x10') %>%
image_border('white', '200x200+100+100') %>%
# image_crop('800x950', gravity = 'south') %>%
image_annotate(toupper(title), size = 50, gravity = "south",
location = '+0+110',
weight = 700) %>%
image_annotate(location,
size = 30,
gravity = 'south',
location = '+0+70',
style = 'italic')
i_crop
zoom = 16
title = 'Miami'
location = 'Florida'
tile <- 'https://api.mapbox.com/styles/v1/ethanarsht/ckzh1dxab009h14l85ghq6ccm/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiZXRoYW5hcnNodCIsImEiOiJja3p4emVycHgwNmpuMnBwY296emJkdG5nIn0.WH_aegqXnpfsAQ-OrdIJeA'
m <- leaflet() %>%
addTiles(urlTemplate = tile) %>%
# addProviderTiles(providers$Stamen.Watercolor) %>%
# addCircleMarkers(
#   lng = 5.1225301,
#   lat = 52.0734346,
#   color = "orange",
#   fillColor = "orange",
#   opacity = 0,
#   fillOpacity = .75,
#   radius = 12
# ) %>%
setView(lng = lng, lat = lat, zoom = zoom)
mapshot(m, file = "temp.png", selfcontained = FALSE, zoom = 2,
vwidth = 992, vheight = 992
)
i <- image_read('temp.png')
i_crop <- i %>%
# image_crop('1400X800', gravity = 'center') %>%
image_border('gray', '10x10') %>%
image_border('white', '200x200+100+100') %>%
# image_crop('800x950', gravity = 'south') %>%
image_annotate(toupper(title), size = 50, gravity = "south",
location = '+0+110',
weight = 700) %>%
image_annotate(location,
size = 30,
gravity = 'south',
location = '+0+70',
style = 'italic')
i_crop
mapshot(m, file = "temp.png", selfcontained = FALSE, zoom = 2,
vwidth = 800, vheight = 800
)
i <- image_read('temp.png')
i_crop <- i %>%
# image_crop('1400X800', gravity = 'center') %>%
image_border('gray', '10x10') %>%
image_border('white', '200x200+100+100') %>%
# image_crop('800x950', gravity = 'south') %>%
image_annotate(toupper(title), size = 50, gravity = "south",
location = '+0+110',
weight = 700) %>%
image_annotate(location,
size = 30,
gravity = 'south',
location = '+0+70',
style = 'italic')
i_crop
mapshot(m, file = "temp.png", selfcontained = FALSE, zoom = 2,
vwidth = 500, vheight = 992
)
i <- image_read('temp.png')
i_crop <- i %>%
# image_crop('1400X800', gravity = 'center') %>%
image_border('gray', '10x10') %>%
image_border('white', '200x200+100+100') %>%
# image_crop('800x950', gravity = 'south') %>%
image_annotate(toupper(title), size = 50, gravity = "south",
location = '+0+110',
weight = 700) %>%
image_annotate(location,
size = 30,
gravity = 'south',
location = '+0+70',
style = 'italic')
i_crop
?mapshot
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
shiny::runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
runApp('easymaps')
library(leaflet)
library(shiny)
library(tidygeocoder)
library(osmdata)
library(raster)
library(rgeos)
library(mapview)
library(shinyWidgets)
library(sf)
library(shinyjs)
?getData
country <- getData("GADM", country = "Belgium", level = 2)
country
tmap::qtm(country)
country <- getData("GADM", country = "Belgium", level = 3)
country
tmap::qtm(country)
country <- getData("GADM", country = "Belgium", level = 4)
tmap::qtm(country)
country <- getData("GADM", country = "Denmark", level = 4)
country <- getData("GADM", country = "Denmark", level = 3)
country <- getData("GADM", country = "Denmark", level = 2)
tmap::qtm(country)
cities <- st_read('cities/gadm404.shp')
setwd("~/map_app/easymaps")
cities <- st_read('cities/gadm404.shp')
cities
unique(cities$TYPE_2)
colnames(cities)
unique(cities$ENGTYPE_1)
colnames(cities)
unique(cities$VARREGION)
colnames(cities)
cities$ENGTYPE_2
cities
munis <- cities %>%
filter(
ENGTYPE_1 == "Municipality"
| ENGTYPE_2 == "Municipality"
| ENGTYPE_3 == "Municipality"
| ENGTYPE_4 == "Municipality"
| ENGTYPE_5 == "Municipality"
)
View(munis)
munis <- cities %>%
filter(
ENGTYPE_1 == "Municipality"
| ENGTYPE_2 == "Municipality"
| ENGTYPE_3 == "Municipality"
| ENGTYPE_4 == "Municipality"
| ENGTYPE_5 == "Municipality"
) %>%
filter(
SOVEREIGN == "Belgium"
)
cities
munis <- cities %>%
filter(
ENGTYPE_1 == "Municipality"
| ENGTYPE_2 == "Municipality"
| ENGTYPE_3 == "Municipality"
| ENGTYPE_4 == "Municipality"
| ENGTYPE_5 == "Municipality"
)
View(munis)
munis <- cities %>%
filter(
ENGTYPE_1 == "Municipality"
| ENGTYPE_2 == "Municipality"
| ENGTYPE_3 == "Municipality"
| ENGTYPE_4 == "Municipality"
| ENGTYPE_5 == "Municipality"
) %>%
as_tibble() %>%
select(-geometry)
View(munis)
unique(munis$NAME_0)
munis <- cities %>%
filter(
ENGTYPE_1 == "Municipality" | "Commune"
| ENGTYPE_2 == "Municipality" | "Commune"
| ENGTYPE_3 == "Municipality" | "Commune"
| ENGTYPE_4 == "Municipality" | "Commune"
| ENGTYPE_5 == "Municipality" | "Commune"
) %>%
as_tibble() %>%
select(-geometry)
munis <- cities %>%
filter(
ENGTYPE_1 == "Municipality" | ENGTYPE_1 == "Commune"
| ENGTYPE_2 == "Municipality" | ENGTYPE_2 == "Commune"
| ENGTYPE_3 == "Municipality" | ENGTYPE_3 == "Commune"
| ENGTYPE_4 == "Municipality" | ENGTYPE_4 == "Commune"
| ENGTYPE_5 == "Municipality" | ENGTYPE_5 == "Commune"
) %>%
as_tibble() %>%
select(-geometry)
unique(munis$NAME_0)
munis <- cities %>%
filter(
ENGTYPE_1 == "Municipality" | ENGTYPE_1 == "Commune"
| ENGTYPE_2 == "Municipality" | ENGTYPE_2 == "Commune"
| ENGTYPE_3 == "Municipality" | ENGTYPE_3 == "Commune"
| ENGTYPE_4 == "Municipality" | ENGTYPE_4 == "Commune"
| ENGTYPE_5 == "Municipality" | ENGTYPE_5 == "Commune"
) %>%
as_tibble() %>%
select(-geometry) %>%
mutate(
NAME_0 = as.character(NAME_0)
)
unique(munis$NAME_0)
unique(cities$NAME_4)
unique(cities$ENGTYPE_1)
View(munis)
cairo_geo <- geo("Cairo, Egypt",
method = "osm", full_results = TRUE,
custom_query = list(polygon_geojson = 1), verbose = TRUE
)
View(cairo_geo)
cairo_geo
View(cairo_geo)
cairo_geo <- geo("Cairo, Egypt",
method = "osm", full_results = TRUE,
custom_query = list(polygon_geojson = 1), verbose = TRUE
) %>%
select(geojson.coordinates)
View(cairo_geo)
cairo_geo <- geo("Cairo, Egypt",
method = "osm", full_results = TRUE,
custom_query = list(polygon_geojson = 1), verbose = TRUE
)
glimpse(cairo_geo)
cairo_geo <- geo("Cairo, Egypt",
method = "osm", full_results = TRUE,
custom_query = list(polygon_geojson = 1), verbose = TRUE
)
View(cairo_geo)
cairo_geo <- geo("Washington, DC",
method = "osm", full_results = TRUE,
custom_query = list(polygon_geojson = 1), verbose = TRUE
)
cairo_geo <- geo("Cairo",
method = "osm", full_results = TRUE,
custom_query = list(polygon_geojson = 1), verbose = TRUE
)
outline_geo <- geo("Cairo",
method = "osm", full_results = TRUE,
custom_query = list(polygon_geojson = 1), verbose = TRUE
)
outline_geo <- geo("Brussels",
method = "osm", full_results = TRUE,
custom_query = list(polygon_geojson = 1), verbose = TRUE
)
ggplot(outline_geo)
View(outline_geo)
outline_geo <- geo("Washington DC",
method = "osm", full_results = TRUE,
custom_query = list(polygon_geojson = 1), verbose = TRUE
)
View(outline_geo)
?geo
